import java.math.*;


/**
 *
 * @author mizan
 */
public class Calculation2 extends javax.swing.JFrame {

    
    private boolean zerodisp;
    private boolean decdisp;
    private boolean dgrrad;
    private boolean sh;
    private byte op;
    
    private double ina;
    private double inb;
    private double out;        
            
    public Calculation2() {
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        display1 = new javax.swing.JTextField();
        memorydisplay = new javax.swing.JTextField();
        memorysave = new javax.swing.JButton();
        memoryread = new javax.swing.JButton();
        sin = new javax.swing.JButton();
        cos = new javax.swing.JButton();
        tan = new javax.swing.JButton();
        pi = new javax.swing.JButton();
        shift = new javax.swing.JButton();
        percent = new javax.swing.JButton();
        oneDivide = new javax.swing.JButton();
        memoryclear = new javax.swing.JButton();
        degrees = new javax.swing.JRadioButton();
        radians = new javax.swing.JRadioButton();
        seven = new javax.swing.JButton();
        eight = new javax.swing.JButton();
        nine = new javax.swing.JButton();
        squred = new javax.swing.JButton();
        add = new javax.swing.JButton();
        four = new javax.swing.JButton();
        five = new javax.swing.JButton();
        six = new javax.swing.JButton();
        squreroot = new javax.swing.JButton();
        subtract = new javax.swing.JButton();
        one = new javax.swing.JButton();
        two = new javax.swing.JButton();
        three = new javax.swing.JButton();
        qubed = new javax.swing.JButton();
        multiply = new javax.swing.JButton();
        zero = new javax.swing.JButton();
        point = new javax.swing.JButton();
        negate = new javax.swing.JButton();
        qubedroot = new javax.swing.JButton();
        divide = new javax.swing.JButton();
        equal = new javax.swing.JButton();
        clear = new javax.swing.JButton();
        reast = new javax.swing.JButton();
        display2 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        display1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        display1.setText("0");
        display1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        display1.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        display1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                display1ActionPerformed(evt);
            }
        });

        memorydisplay.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        memorydisplay.setText("0");
        memorydisplay.setBorder(null);
        memorydisplay.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);

        memorysave.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        memorysave.setText("MS");
        memorysave.setBorder(null);
        memorysave.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        memorysave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                memorysaveActionPerformed(evt);
            }
        });

        memoryread.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        memoryread.setText("MR");
        memoryread.setBorder(null);
        memoryread.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        memoryread.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                memoryreadActionPerformed(evt);
            }
        });

        sin.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        sin.setText("sin");
        sin.setBorder(null);
        sin.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        sin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sinActionPerformed(evt);
            }
        });

        cos.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        cos.setText("cos");
        cos.setBorder(null);
        cos.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        cos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cosActionPerformed(evt);
            }
        });

        tan.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        tan.setText("tan");
        tan.setBorder(null);
        tan.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        tan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tanActionPerformed(evt);
            }
        });

        pi.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        pi.setText("‚àè");
        pi.setBorder(null);
        pi.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        pi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                piActionPerformed(evt);
            }
        });

        shift.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        shift.setText("Sh");
        shift.setBorder(null);
        shift.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        shift.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                shiftMouseClicked(evt);
            }
        });
        shift.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                shiftActionPerformed(evt);
            }
        });

        percent.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        percent.setText("%");
        percent.setBorder(null);
        percent.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        percent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                percentActionPerformed(evt);
            }
        });

        oneDivide.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        oneDivide.setText("1/x");
        oneDivide.setBorder(null);
        oneDivide.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        oneDivide.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oneDivideActionPerformed(evt);
            }
        });

        memoryclear.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        memoryclear.setText("MC");
        memoryclear.setBorder(null);
        memoryclear.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        memoryclear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                memoryclearActionPerformed(evt);
            }
        });

        degrees.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        degrees.setSelected(true);
        degrees.setText("Dereegs");
        degrees.setBorder(null);
        degrees.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        degrees.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                degreesActionPerformed(evt);
            }
        });

        radians.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        radians.setText("Radians");
        radians.setBorder(null);
        radians.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        radians.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radiansActionPerformed(evt);
            }
        });

        seven.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        seven.setText("7");
        seven.setBorder(null);
        seven.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        seven.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sevenActionPerformed(evt);
            }
        });

        eight.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        eight.setText("8");
        eight.setBorder(null);
        eight.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        eight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eightActionPerformed(evt);
            }
        });

        nine.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        nine.setText("9");
        nine.setBorder(null);
        nine.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        nine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nineActionPerformed(evt);
            }
        });

        squred.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        squred.setText("x¬≤");
        squred.setBorder(null);
        squred.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        squred.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                squredActionPerformed(evt);
            }
        });

        add.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        add.setText("+");
        add.setBorder(null);
        add.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        four.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        four.setText("4");
        four.setBorder(null);
        four.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        four.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fourActionPerformed(evt);
            }
        });

        five.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        five.setText("5");
        five.setBorder(null);
        five.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        five.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fiveActionPerformed(evt);
            }
        });

        six.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        six.setText("6");
        six.setBorder(null);
        six.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        six.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sixActionPerformed(evt);
            }
        });

        squreroot.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        squreroot.setText("‚àöx");
        squreroot.setBorder(null);
        squreroot.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        squreroot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                squrerootActionPerformed(evt);
            }
        });

        subtract.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        subtract.setText("-");
        subtract.setBorder(null);
        subtract.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        subtract.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subtractActionPerformed(evt);
            }
        });

        one.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        one.setText("1");
        one.setBorder(null);
        one.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        one.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oneActionPerformed(evt);
            }
        });

        two.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        two.setText("2");
        two.setBorder(null);
        two.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        two.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                twoActionPerformed(evt);
            }
        });

        three.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        three.setText("3");
        three.setBorder(null);
        three.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        three.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                threeActionPerformed(evt);
            }
        });

        qubed.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        qubed.setText("x¬≥");
        qubed.setBorder(null);
        qubed.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        qubed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qubedActionPerformed(evt);
            }
        });

        multiply.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        multiply.setText("*");
        multiply.setBorder(null);
        multiply.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        multiply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                multiplyActionPerformed(evt);
            }
        });

        zero.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        zero.setText("0");
        zero.setBorder(null);
        zero.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        zero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zeroActionPerformed(evt);
            }
        });

        point.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        point.setText(".");
        point.setBorder(null);
        point.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        point.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pointActionPerformed(evt);
            }
        });

        negate.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        negate.setText("¬± ");
        negate.setBorder(null);
        negate.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        negate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                negateActionPerformed(evt);
            }
        });

        qubedroot.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        qubedroot.setText("¬≥‚àöx");
        qubedroot.setBorder(null);
        qubedroot.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        qubedroot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qubedrootActionPerformed(evt);
            }
        });

        divide.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        divide.setText("/");
        divide.setBorder(null);
        divide.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        divide.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                divideActionPerformed(evt);
            }
        });

        equal.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        equal.setText("=");
        equal.setBorder(null);
        equal.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        equal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                equalActionPerformed(evt);
            }
        });

        clear.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        clear.setText("CE");
        clear.setBorder(null);
        clear.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });

        reast.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        reast.setText("C");
        reast.setBorder(null);
        reast.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        reast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reastActionPerformed(evt);
            }
        });

        display2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        display2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        display2.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        display2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                display2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(display2, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(display1, javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(memoryread, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(memoryclear, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(memorysave, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(memorydisplay))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(sin, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(cos, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(61, 61, 61)
                                    .addComponent(shift, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(degrees)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(radians, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(percent, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(oneDivide, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(pi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(tan, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(seven, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(eight, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(nine, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(squred, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(four, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(five, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(six, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(squreroot, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(subtract, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(one, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(two, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(three, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(qubed, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(multiply, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(zero, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(point, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(negate, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(qubedroot, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(divide, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(equal, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(clear, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(reast, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(display2, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(display1, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(memorysave)
                        .addComponent(memoryread)
                        .addComponent(memoryclear))
                    .addComponent(memorydisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(oneDivide)
                        .addComponent(percent))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(degrees)
                        .addComponent(radians)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sin)
                    .addComponent(cos)
                    .addComponent(tan)
                    .addComponent(pi)
                    .addComponent(shift))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(seven, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(eight, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nine, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(squred, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(four, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(five, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(six, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(squreroot, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(subtract, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(one, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(two, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(three, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(qubed, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(multiply, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(zero, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(point, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(negate, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(qubedroot, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(divide, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(equal, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clear, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(reast, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void percentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_percentActionPerformed
        ina=Double.parseDouble(String.valueOf(display1.getText()));
        display1.setText("");
        display2.setText(display2.getText()+ "%(");
        decdisp=false;
        zerodisp=false;
        op=5;
        
       
    }//GEN-LAST:event_percentActionPerformed

    private void memorysaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_memorysaveActionPerformed
        memorydisplay.setText(String.valueOf(display1.getText()));
    }//GEN-LAST:event_memorysaveActionPerformed

    private void eightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eightActionPerformed
       if(!zerodisp && !decdisp){
           display1.setText("");    
       }
       display1.setText(display1.getText()+"8");
       zerodisp=true;
    }//GEN-LAST:event_eightActionPerformed

    private void squredActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_squredActionPerformed
        inb= Double.parseDouble(String.valueOf(display1.getText()));
        out = inb*inb;
        
       if(out>-10000000 && out<10000000){
           display1.setText(String.valueOf(out));
           
       }
       else{
           display1.setText("Error!!!");
       }
       display2.setText(String.valueOf(inb) + "¬≤");
       out =0;
    }//GEN-LAST:event_squredActionPerformed

    private void memoryclearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_memoryclearActionPerformed
       memorydisplay.setText("0");
    }//GEN-LAST:event_memoryclearActionPerformed

    private void oneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oneActionPerformed
       
       display1.setText(display1.getText()+"1");
       zerodisp=true;
    }//GEN-LAST:event_oneActionPerformed

    private void zeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zeroActionPerformed
       if(!zerodisp && !decdisp){
           display1.setText("");    
       }
       display1.setText(display1.getText()+"0");
       //zerodisp=true;
       
    }//GEN-LAST:event_zeroActionPerformed

    private void twoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_twoActionPerformed
        if(!zerodisp && !decdisp){
           display1.setText("");    
       }
       display1.setText(display1.getText()+"2");
       zerodisp=true;
    }//GEN-LAST:event_twoActionPerformed

    private void threeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_threeActionPerformed
        if(!zerodisp && !decdisp){
           display1.setText("");    
       }
       display1.setText(display1.getText()+"3");
       zerodisp=true;
    }//GEN-LAST:event_threeActionPerformed

    private void fourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fourActionPerformed
        if(!zerodisp && !decdisp){
           display1.setText("");    
       }
       display1.setText(display1.getText()+"4");
       zerodisp=true;
    }//GEN-LAST:event_fourActionPerformed

    private void fiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fiveActionPerformed
        if(!zerodisp && !decdisp){
           display1.setText("");    
       }
       display1.setText(display1.getText()+"5");
       zerodisp=true;
    }//GEN-LAST:event_fiveActionPerformed

    private void sixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sixActionPerformed
        if(!zerodisp && !decdisp){
           display1.setText("");    
       }
       display1.setText(display1.getText()+"6");
       zerodisp=true;
    }//GEN-LAST:event_sixActionPerformed

    private void sevenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sevenActionPerformed
        if(!zerodisp && !decdisp){
           display1.setText("");    
       }
       display1.setText(display1.getText()+"7");
       zerodisp=true;
    }//GEN-LAST:event_sevenActionPerformed

    private void nineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nineActionPerformed
       if(!zerodisp && !decdisp){
           display1.setText("");    
       }
       display1.setText(display1.getText()+"9");
       zerodisp=true;
    }//GEN-LAST:event_nineActionPerformed

    private void pointActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pointActionPerformed
        if(!decdisp)
        {
               display1.setText(display1.getText()+".");
               zerodisp=true;
        }
        
    }//GEN-LAST:event_pointActionPerformed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        display1.setText("0");
        decdisp=false;
        zerodisp=false;   
    }//GEN-LAST:event_clearActionPerformed

    private void reastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reastActionPerformed
        display1.setText("0");
        display2.setText(null);
        decdisp=false;
        zerodisp=false;
        ina=0;
        inb=0;
        out=0;
    }//GEN-LAST:event_reastActionPerformed

    private void negateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_negateActionPerformed
       inb=Double.parseDouble(String.valueOf(display1.getText()));
       out=inb*-1;
       if(out>-10000000 && out<10000000){
           display1.setText(String.valueOf(out));
           
       }
       else{
           display1.setText("Error!!!");
       }
       decdisp=true;
       out=0;
    }//GEN-LAST:event_negateActionPerformed

    private void qubedrootActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qubedrootActionPerformed
        inb= Double.parseDouble(String.valueOf(display1.getText()));
        out = Math.cbrt(inb);
        
        display1.setText(String.valueOf(out));
        display2.setText("¬≥‚àö"+String.valueOf(inb));
        out =0;
    }//GEN-LAST:event_qubedrootActionPerformed

    private void memoryreadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_memoryreadActionPerformed
       display1.setText(String.valueOf(memorydisplay.getText()));
    }//GEN-LAST:event_memoryreadActionPerformed

    private void oneDivideActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oneDivideActionPerformed
        inb=Double.parseDouble(String.valueOf(display1.getText()));
        out=1/inb;
        if(out>-10000000 && out<10000000){
           display1.setText(String.valueOf(out));
           
       }
       else{
           display1.setText("Error!!!");
       }
      display2.setText("1/" + String.valueOf(inb));
       out=0;
    }//GEN-LAST:event_oneDivideActionPerformed

    private void piActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_piActionPerformed
        display1.setText(String.valueOf(Math.PI));
    }//GEN-LAST:event_piActionPerformed

    private void squrerootActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_squrerootActionPerformed
        inb= Double.parseDouble(String.valueOf(display1.getText()));
        out = Math.sqrt(inb);
        
        display1.setText(String.valueOf(out));
        display2.setText("‚àö"+String.valueOf(inb));
        out =0;
    }//GEN-LAST:event_squrerootActionPerformed

    private void qubedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qubedActionPerformed
        inb= Double.parseDouble(String.valueOf(display1.getText()));
        out = inb*inb*inb;
         
       if(out>-10000000 && out<10000000){
           display1.setText(String.valueOf(out));
           
       }
       else{
           display1.setText("Error!!!");
       }
       display2.setText(String.valueOf(inb) + "¬≥");
       out =0;
    }//GEN-LAST:event_qubedActionPerformed

    private void shiftMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_shiftMouseClicked
        if(sh){
            sh=true;
        }
        else{
            sh=false;
        }
    }//GEN-LAST:event_shiftMouseClicked

    private void degreesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_degreesActionPerformed
        dgrrad=false;
    }//GEN-LAST:event_degreesActionPerformed

    private void radiansActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radiansActionPerformed
        dgrrad=false;
    }//GEN-LAST:event_radiansActionPerformed

    private void sinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sinActionPerformed
       inb=Double.parseDouble(String.valueOf(display1.getText()));
       if(!sh){
         if(!dgrrad){
                inb=inb*0.0174532925;
                display2.setText("sin("+String.valueOf(inb)+")");

         } 
         out= Math.sin(inb);
       }
       else{
           display2.setText("sinh("+String.valueOf(inb)+")");
           out=Math.sinh(inb);
       }
       display1.setText(String.valueOf(out));
       out=0;
    }//GEN-LAST:event_sinActionPerformed

    private void cosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cosActionPerformed
        inb=Double.parseDouble(String.valueOf(display1.getText()));
       if(!sh){
         if(!dgrrad){
             display2.setText("cos("+String.valueOf(inb)+")");
             inb=inb*0.0174532925;
         } 
         out= Math.cos(inb);
       }
       else{
           display2.setText("cosh("+String.valueOf(inb)+")");
           out=Math.cosh(inb);
       }
       display1.setText(String.valueOf(out));
       out=inb;
    }//GEN-LAST:event_cosActionPerformed

    private void tanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tanActionPerformed
        inb=Double.parseDouble(String.valueOf(display1.getText()));
       if(!sh){
         if(!dgrrad){
             display2.setText("tan("+String.valueOf(inb)+")");
             inb=inb*0.0174532925;
         } 
         out= Math.tan(inb);
       }
       else{
           display2.setText("tanh("+String.valueOf(inb)+")");
           out=Math.tanh(inb);
       }
       display1.setText(String.valueOf(out));
       out=0;
    }//GEN-LAST:event_tanActionPerformed

    private void shiftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shiftActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_shiftActionPerformed

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        
        if(op == 0){
            ina=Double.parseDouble(String.valueOf(display1.getText()));
        } 
        else{
            inb=Double.parseDouble(String.valueOf(display1.getText()));
        }
        
        if(op== 1){
            inb=ina+inb;
        }
        if(op== 2){
            inb=ina-inb;
        }
        if(op== 3){
            inb=ina*inb;
        }
        if(op== 4){
            inb=ina/inb;
        }
        if(op== 5){
            inb=ina*inb/100;
        }
        display1.setText("0");
        display2.setText("");
        display2.setText(ina+ "+");
        op=1;
        
        decdisp=false;
        zerodisp=false;
        
    }//GEN-LAST:event_addActionPerformed

    private void subtractActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subtractActionPerformed
    if(op == 0){
            ina=Double.parseDouble(String.valueOf(display1.getText()));
        } 
        else{
            inb=Double.parseDouble(String.valueOf(display1.getText()));
        }
        
        if(op== 1){
            inb=ina+inb;
        }
        if(op== 2){
            inb=ina-inb;
        }
        if(op== 3){
            inb=ina*inb;
        }
        if(op== 4){
            inb=ina/inb;
        }
        if(op== 5){
            inb=ina*inb/100;
        }
        display1.setText("0");
        display2.setText(ina+ "-");
        op=2;
        
        decdisp=false;
        zerodisp=false;
    }//GEN-LAST:event_subtractActionPerformed

    private void multiplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_multiplyActionPerformed
        if(op == 0){
            ina=Double.parseDouble(String.valueOf(display1.getText()));
        } 
        else{
            inb=Double.parseDouble(String.valueOf(display1.getText()));
        }
        
        if(op== 1){
            inb=ina+inb;
        }
        if(op== 2){
            inb=ina-inb;
        }
        if(op== 3){
            inb=ina*inb;
        }
        if(op== 4){
            inb=ina/inb;
        }
        if(op== 5){
            inb=ina*inb/100;
        }
        display1.setText("0");
        display2.setText(ina+ "*");
        op=3;
        
        decdisp=false;
        zerodisp=false;
    }//GEN-LAST:event_multiplyActionPerformed

    private void divideActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_divideActionPerformed
        if(op == 0){
            ina=Double.parseDouble(String.valueOf(display1.getText()));
        } 
        else{
            inb=Double.parseDouble(String.valueOf(display1.getText()));
        }
        
        if(op== 1){
            inb=ina+inb;
        }
        if(op== 2){
            inb=ina-inb;
        }
        if(op== 3){
            inb=ina*inb;
        }
        if(op== 4){
            inb=ina/inb;
        }
        if(op== 5){
            inb=ina*inb/100;
        }
        display1.setText("0");
        display2.setText(ina+ "/");
        op=4;
        
        decdisp=false;
        zerodisp=false;
    }//GEN-LAST:event_divideActionPerformed

    private void display1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_display1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_display1ActionPerformed

    private void equalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_equalActionPerformed
       inb=Double.parseDouble(String.valueOf(display1.getText()));
       if(op==0)
       {
            out=ina+inb;
       display2.setText( String.valueOf(inb));
       }
       if(op==1)
       {
            out=ina+inb;
       display2.setText(display2.getText()+ String.valueOf(inb));
       }if(op==2)
       {
            out=ina-inb;
       display2.setText(display2.getText()+ String.valueOf(inb));
       }if(op==3)
       {
            out=ina*inb;
       display2.setText(display2.getText()+ String.valueOf(inb));
       }if(op==4)
       {
            out=ina/inb;
       display2.setText(display2.getText()+ String.valueOf(inb));
       }if(op==5)
       {
            out=ina%inb;
       display2.setText(display2.getText()+ String.valueOf(inb) + ")" );
       }
       if(out>-10000000 && out<10000000){
           display1.setText(String.valueOf(out));
           
       }
       else{
           display1.setText("Error!!!");
       }
       
       ina=0;
       inb=0;
       op=0;
       
       decdisp=false;
       zerodisp=false;
       
       
    }//GEN-LAST:event_equalActionPerformed

    private void display2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_display2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_display2ActionPerformed

    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Calculation2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Calculation2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Calculation2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Calculation2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Calculation2().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JButton clear;
    private javax.swing.JButton cos;
    private javax.swing.JRadioButton degrees;
    private javax.swing.JTextField display1;
    private javax.swing.JTextField display2;
    private javax.swing.JButton divide;
    private javax.swing.JButton eight;
    private javax.swing.JButton equal;
    private javax.swing.JButton five;
    private javax.swing.JButton four;
    private javax.swing.JButton memoryclear;
    private javax.swing.JTextField memorydisplay;
    private javax.swing.JButton memoryread;
    private javax.swing.JButton memorysave;
    private javax.swing.JButton multiply;
    private javax.swing.JButton negate;
    private javax.swing.JButton nine;
    private javax.swing.JButton one;
    private javax.swing.JButton oneDivide;
    private javax.swing.JButton percent;
    private javax.swing.JButton pi;
    private javax.swing.JButton point;
    private javax.swing.JButton qubed;
    private javax.swing.JButton qubedroot;
    private javax.swing.JRadioButton radians;
    private javax.swing.JButton reast;
    private javax.swing.JButton seven;
    private javax.swing.JButton shift;
    private javax.swing.JButton sin;
    private javax.swing.JButton six;
    private javax.swing.JButton squred;
    private javax.swing.JButton squreroot;
    private javax.swing.JButton subtract;
    private javax.swing.JButton tan;
    private javax.swing.JButton three;
    private javax.swing.JButton two;
    private javax.swing.JButton zero;
    // End of variables declaration//GEN-END:variables
}
